//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SerratedSharp.JSInteropHelpers {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class EmbeddedFiles {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EmbeddedFiles() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SerratedSharp.JSInteropHelpers.EmbeddedFiles", typeof(EmbeddedFiles).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // This javascript declaration is an embedded resource, and is emitted client side by C# startup code at runtime.
        ///console.log(&quot;Declaring JQueryProxy&quot;);
        ///
        ///// makes JSExport from JQueryProxy available on globalThis.SerratedExports.SerratedSharp.SerratedJQ.JQueryProxy
        /////Module.getAssemblyExports(&quot;SerratedSharp.SerratedJQ&quot;)
        /////    .then(module =&gt; globalThis.SerratedExports = module);
        ///
        ///// TODO: Consider object literal notation instead of IIFE and export as module
        ///var Serrated = Serrated || {};
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string JQueryProxy {
            get {
                return ResourceManager.GetString("JQueryProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // This javascript declaration is an embedded resource, and is emitted client side by C# startup code at runtime.
        ///console.log(&quot;Declaring JSInteropProxies&quot;);
        ///
        ///// makes JSExport from JQueryProxy available on globalThis.SerratedExports.SerratedSharp.SerratedJQ.JQueryProxy
        /////Module.getAssemblyExports(&quot;SerratedSharp.SerratedJQ&quot;)
        /////    .then(module =&gt; globalThis.SerratedExports = module);
        ///
        ///// TODO: Consider object literal notation instead of IIFE and export as module
        ///var Serrated = Serrated ||  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string JSInteropProxies {
            get {
                return ResourceManager.GetString("JSInteropProxies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // This javascript declaration is an embedded resource, and is emitted client side by C# startup code at runtime.
        ///console.log(&quot;Observe declared&quot;);
        /////var targetNodes = $(document.documentElement); // $(&apos;.myclass&apos;);
        ///var MutationObserver = window.MutationObserver || window.WebKitMutationObserver;
        ///var observer = new MutationObserver(mutationHandler);
        ///var obsConfig = {
        ///    childList: true,
        ///    characterData: true,
        ///    attributes: true,
        ///    subtree: true
        ///};
        ///
        /////--- Add a target node to the observer. Ca [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ObserveRemoved {
            get {
                return ResourceManager.GetString("ObserveRemoved", resourceCulture);
            }
        }
    }
}
