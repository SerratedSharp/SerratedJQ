<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup Label="Globals">
		<SccProjectName>SAK</SccProjectName>
		<SccProvider>SAK</SccProvider>
		<SccAuxPath>SAK</SccAuxPath>
		<SccLocalPath>SAK</SccLocalPath>
		<Configurations>Debug;Release</Configurations>
	</PropertyGroup>

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net8.0</TargetFramework>

	</PropertyGroup>

	<PropertyGroup>
		<!-- Language Features -->
		<ImplicitUsings>disable</ImplicitUsings>
		<Nullable>disable</Nullable>
	</PropertyGroup>

	<!-- WASM Configuration -->
	<PropertyGroup>
		<!-- Trimming, set to false to support breakpoints -->
		<WasmShellILLinkerEnabled>true</WasmShellILLinkerEnabled>
		<!-- Required for .NET JS interopt support(i.e. [JSImport] attributes) -->
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
	</PropertyGroup>
	
	<PropertyGroup Condition="'$(Configuration)'=='Debug'">
		<!-- Set to true to enable debugging. Also enables line numbers in exceptions. Currently decreases performance significantly! -->
		<MonoRuntimeDebuggerEnabled>true</MonoRuntimeDebuggerEnabled>
		<!-- WasmShellEnableThreads must be false to allow breakpoints.  Note: async/promises interopt support still works even if set to false. -->
		<WasmShellEnableThreads>false</WasmShellEnableThreads>
		<!-- <DebugType>full</DebugType> will prevent breakpoints from working.  Using the Project Properties window can add <PropertyGroup> sections to other parts of the *.csproj that may override this property and break debugging -->
		<DebugType>portable</DebugType>
		<DebugSymbols>true</DebugSymbols>
		<DefineConstants>$(DefineConstants);TRACE;DEBUG</DefineConstants>
	</PropertyGroup>
	<ItemGroup>
		<Content Include="jquery-3.7.1.js" UnoDeploy="Root" />
	</ItemGroup>

	<!--DebugType=full prevents breakpoints from working. These sections can be generated by using the Project Properties dialog. -->
	<!--<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<DefineConstants>DEBUG;TRACE</DefineConstants>
		<DebugType>full</DebugType>
	  </PropertyGroup>
	  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<DebugType>full</DebugType>
	  </PropertyGroup>
	-->

	<!-- Nuget packages -->
	<ItemGroup>
		<!-- Legacy JS interop APIs still used for easily loading embedded JS files with WebAssemblyRuntime.InvokeJS.  Should be phased out for other recommended JS embedding options. -->
		<PackageReference Include="Uno.Foundation.Runtime.WebAssembly" Version="5.0.19" />
		<!-- Supports compilation and packaging to WebAssembly format -->
		<PackageReference Include="Uno.Wasm.Bootstrap" Version="8.0.0" />
		<!-- Self hosted dev server -->
		<PackageReference Include="Uno.Wasm.Bootstrap.DevServer" Version="8.0.0" />

		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<!--All these are needed when IL Linker is enabled and Newtonsoft.Json is referenced, as they are indirect dependencies of Newtonsoft. -->
		<PackageReference Include="System.CodeDom" Version="8.0.0-rc.2.23479.6" />
		<PackageReference Include="System.Configuration.ConfigurationManager" Version="8.0.0-rc.2.23479.6" />
		<PackageReference Include="System.Diagnostics.PerformanceCounter" Version="8.0.0-rc.2.23479.6" />
		<PackageReference Include="System.Drawing.Common" Version="8.0.0-rc.2.23479.14" />
		<PackageReference Include="System.IO.Ports" Version="8.0.0-rc.2.23479.6" />
		<PackageReference Include="System.Security.Permissions" Version="8.0.0-rc.2.23479.6" />
		<PackageReference Include="System.Threading.AccessControl" Version="8.0.0-rc.2.23479.6" />

	</ItemGroup>

	<!-- Library of brute force XSS payloads to use in unit tests. -->
	<ItemGroup>
		<None Remove="XssPayloads1.txt" />
	</ItemGroup>
	<ItemGroup>
		<EmbeddedResource Include="XssPayloads1.txt">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\SerratedJQ\SerratedJQ.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="EmbeddedTestFiles.Designer.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>EmbeddedTestFiles.resx</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Update="EmbeddedTestFiles.resx">
			<Generator>ResXFileCodeGenerator</Generator>
			<LastGenOutput>EmbeddedTestFiles.Designer.cs</LastGenOutput>
		</EmbeddedResource>
	</ItemGroup>

</Project>
