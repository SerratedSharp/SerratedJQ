<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup Label="Globals">
    <SccProjectName></SccProjectName>
    <SccProvider></SccProvider>
    <SccAuxPath></SccAuxPath>
    <SccLocalPath></SccLocalPath>
    <Configurations>Debug;Release;</Configurations>
  </PropertyGroup>

  <PropertyGroup>
	  <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <TargetFramework>net8.0</TargetFramework>
    <RootNamespace>SerratedSharp.SerratedJQ</RootNamespace>
    <PackageId>SerratedSharp.SerratedJQ</PackageId>
    <Authors>SerratedSharpSolutions</Authors>
    <Company>SerratedSharpSolutions</Company>
    <Description>A C# WebAssembly wrapper for jQuery, intended to enable implementation of client side logic in C# for a traditional web application such as ASP.NET MVC.  Provides the capability to read and manipulate the HTML DOM, create .NET event handlers subscribed to HTML DOM events, hold references to DOM elements from a .NET WebAssembly, and attach primitive data or managed object references to elements.  Intended for us in assemblies that leverage Uno.Wasm.Bootstrap for compilation to WebAssembly format, but does not require consumers to use the full Uno Platform.</Description>
    <Copyright>Copyright (c) SerratedSharpSolutions 2024</Copyright>
    <PackageReleaseNotes>This version has been tested with Uno.Wasm.Bootstrap 8.0.3 and alternatively .NET 8 wasmbrowser under .NET Core 8.</PackageReleaseNotes>
    <PackageTags>WebAssembly, Uno, JQuery</PackageTags>
	        <Version>0.1.8</Version>
	<AssemblyVersion>0.1.8.0</AssemblyVersion>
        <FileVersion>0.1.8.0</FileVersion>
	<PackageReadmeFile>readme.md</PackageReadmeFile>
	<AssemblyName>SerratedSharp.SerratedJQ</AssemblyName>
	<GenerateDocumentationFile>true</GenerateDocumentationFile>
	<PackageLicenseFile />
	<PackageProjectUrl>https://github.com/SerratedSharp/SerratedJQ</PackageProjectUrl>
	<RepositoryUrl>https://github.com/SerratedSharp/SerratedJQ/tree/main/SerratedJQLibrary/SerratedJQ</RepositoryUrl>
	<RepositoryType>git</RepositoryType>
  </PropertyGroup>
	
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
	  <PackageLicenseExpression>MIT</PackageLicenseExpression>
	  <NoWarn>1701;1702;1591</NoWarn>
  </PropertyGroup>
	
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <NoWarn>1701;1702;1591</NoWarn>
  </PropertyGroup>
	
  <ItemGroup>
    <Compile Remove="Resources\**" />
    <EmbeddedResource Remove="Resources\**" />
    <None Remove="Resources\**" />
  </ItemGroup>
	
  <ItemGroup>
    <None Remove="WasmScripts\SerratedJQ.js" />
  </ItemGroup>
	
  <ItemGroup>
    <EmbeddedResource Include="WasmScripts\SerratedJQ.js">
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
	 <None Include="readme.md" Pack="true" PackagePath="\" />
	 <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
	  <!-- Required by Newtonsoft when IL Linker is enabled -->
	 <PackageReference Include="Microsoft.Windows.Compatibility" Version="8.0.0" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="EmbeddedFiles.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>EmbeddedFiles.resx</DependentUpon>
    </Compile>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="EmbeddedFiles.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>EmbeddedFiles.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\JSInteropHelpers\JSInteropHelpers.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="EmbeddedFiles\" />
  </ItemGroup>

	<ItemGroup>
		<EmbeddedResource Include="LinkerConfig.xml">
			<LogicalName>SerratedSharp.SerratedJQ.xml</LogicalName>
		</EmbeddedResource>
	</ItemGroup>

  <!-- Post build - Making backup of original, obfuscating, then nuget packaging. -->
  <Target Name="CopyWasmAfterBuild" AfterTargets="Build" Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">

    <Message Importance="high" Text="After Build Start" />
    <Message Importance="high" Text="OutDir: $(OutDir)" />
    <Message Importance="high" Text="PublishDir: $(PublishDir)" />
	<Message Importance="high" Text="Configuration: $(Configuration)" />
	<Message Importance="high" Text="TargetPath: $(TargetPath)" />
	<Message Importance="high" Text="ProjectDir: $(ProjectDir)" />

	  <!-- Backup original file -->
	<!--<Copy SourceFiles="$(TargetPath)" DestinationFiles="$(TargetPath).ori" />
	  -->
	  <!--  
    <ItemGroup>
      <WasmDistFiles Include="$(WasmShellOutputDistPath)\**\*.*"/>
    </ItemGroup>

    <PropertyGroup>
      <WRoot>$(SolutionDir)JQDemo1.Mvc\wwwroot\</WRoot>
    </PropertyGroup>
    <Message Importance="high" Text="WRoot: $(WRoot)" />

    <ItemGroup>
      <OldWasmFiles Include="$([System.IO.Directory]::GetDirectories(`$(WRoot)`,`package_*`))" />
    </ItemGroup>
    <Message Importance="high" Text="OldWasmFiles: @(OldWasmFiles)"/>
    <RemoveDir Directories="@(OldWasmFiles)" />

    <Message Importance="high" Text="WasmDistFiles: @(WasmDistFiles)" />
    <Copy
			  SourceFiles="$(ProjectDir)"
			  DestinationFiles="@(WasmDistFiles->'$(WRoot)%(RecursiveDir)%(Filename)%(Extension)')"
			  SkipUnchangedFiles="true" />-->
    <Message Importance="high" Text="After Build End" />

  </Target>
	

	
	    
</Project>
